// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SanGiuseppe.Models;

namespace SanGiuseppe.Migrations
{
    [DbContext(typeof(SanGiuseppeContext))]
    [Migration("20210713102326_tmp")]
    partial class tmp
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "Latin1_General_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.6")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SanGiuseppe.Models.Anagrafica", b =>
                {
                    b.Property<int>("Idanagrafica")
                        .HasColumnType("int")
                        .HasColumnName("IDAnagrafica");

                    b.Property<int?>("Albergo")
                        .HasColumnType("int");

                    b.Property<int?>("AnnoDiInizio")
                        .HasColumnType("int");

                    b.Property<string>("Camera")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("CameraSingola")
                        .HasColumnType("bit");

                    b.Property<string>("CapDomicilio")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CapResidenza")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Cellulare")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Cittadinanza")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CittàDomicilio")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CittàResidenza")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Codfisc")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)")
                        .HasColumnName("codfisc");

                    b.Property<string>("Cognome")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DataInizio")
                        .HasColumnType("datetime");

                    b.Property<string>("DataLettera")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DatadiNascita")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("EsenteFondoComune")
                        .HasColumnType("bit");

                    b.Property<string>("Gruppo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IndirizzoDomicilio")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IndirizzoResidenza")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("InviaEmail")
                        .HasColumnType("bit");

                    b.Property<string>("Lingua")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LuogodiNascita")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nazione")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NazioneDomicilio")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NazioneResidenza")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nome")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short?>("NumeroIscrizione")
                        .HasColumnType("smallint");

                    b.Property<string>("NumeroIscrizioneFraternità")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("Nuovo")
                        .HasColumnType("bit");

                    b.Property<bool?>("PartecipaRitiro")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("PartecipaRitiroData")
                        .HasColumnType("datetime");

                    b.Property<string>("Professione")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ProvinciaDomicilio")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ProvinciaResidenza")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double?>("QuotaFondoComune")
                        .HasColumnType("float");

                    b.Property<string>("QuotaFondoComuneValuta")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("RitiroImporto")
                        .HasColumnType("float");

                    b.Property<string>("RitiroPagamentoCro")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("RitiroPagamentoCRO");

                    b.Property<DateTime?>("RitiroPagamentoData")
                        .HasColumnType("datetime");

                    b.Property<string>("RitiroPagamentoIdtransazione")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("RitiroPagamentoIDTransazione");

                    b.Property<double?>("RitiroPagamentoImporto")
                        .HasColumnType("float");

                    b.Property<double?>("RitiroQuota")
                        .HasColumnType("float");

                    b.Property<double?>("RitiroSupplentoSingola")
                        .HasColumnType("float");

                    b.Property<bool>("SanGiuseppe")
                        .HasColumnType("bit");

                    b.Property<bool?>("Selezionato")
                        .HasColumnType("bit");

                    b.Property<string>("Sesso")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("Telefono")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TipoPagamento")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("UID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(NewID())");

                    b.Property<string>("Zona")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Idanagrafica");

                    b.ToTable("Anagrafica");
                });

            modelBuilder.Entity("SanGiuseppe.Models.AnagraficaPrimaDelleModifiche", b =>
                {
                    b.Property<string>("CapDomicilio")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CapResidenza")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Cellulare")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("cellulare");

                    b.Property<string>("Cittadinanza")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("cittadinanza");

                    b.Property<string>("CittàDomicilio")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CittàResidenza")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Codfisc")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)")
                        .HasColumnName("codfisc");

                    b.Property<string>("Cognome")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DatadiNascita")
                        .HasColumnType("datetime");

                    b.Property<string>("DescrizioneProfessione")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("email");

                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<int>("Idsocio")
                        .HasColumnType("int")
                        .HasColumnName("IDSocio");

                    b.Property<string>("IndirizzoDomicilio")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IndirizzoResidenza")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LuogoDiLavoro")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LuogodiNascita")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nazione")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("nazione");

                    b.Property<string>("NazioneDomicilio")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NazioneResidenza")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nome")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<short?>("NumeroIscrizione")
                        .HasColumnType("smallint");

                    b.Property<string>("NumeroIscrizioneFraternità")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Professione")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Provincia")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("provincia");

                    b.Property<string>("ProvinciaDomicilio")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ProvinciaResidenza")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double?>("QuotaFondoCarita")
                        .HasColumnType("float");

                    b.Property<double?>("QuotaFondoComune")
                        .HasColumnType("float");

                    b.Property<string>("Sesso")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("Telefono1")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("telefono1");

                    b.Property<string>("Telefono2")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("telefono2");

                    b.Property<string>("TipoPagamento")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.ToTable("AnagraficaPrimaDelleModifiche");
                });

            modelBuilder.Entity("SanGiuseppe.Models.AnagraficaRuoli", b =>
                {
                    b.Property<int>("IdanafraficaIncarico")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IDAnafraficaIncarico")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CodiceRuolo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DataInizio")
                        .HasColumnType("date");

                    b.Property<int?>("Idanagrafica")
                        .HasColumnType("int")
                        .HasColumnName("IDAnagrafica");

                    b.Property<DateTime?>("Scadenza")
                        .HasColumnType("date");

                    b.HasKey("IdanafraficaIncarico");

                    b.HasIndex("Idanagrafica");

                    b.ToTable("AnagraficaRuoli");
                });

            modelBuilder.Entity("SanGiuseppe.Models.AnagraficaSospesi", b =>
                {
                    b.Property<int>("Idanagrafica")
                        .HasColumnType("int")
                        .HasColumnName("IDAnagrafica");

                    b.Property<int?>("Albergo")
                        .HasColumnType("int");

                    b.Property<int?>("AnnoDiInizio")
                        .HasColumnType("int");

                    b.Property<string>("Camera")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("CameraSingola")
                        .HasColumnType("bit");

                    b.Property<string>("CapDomicilio")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CapResidenza")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Cellulare")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("cellulare");

                    b.Property<string>("Cittadinanza")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("cittadinanza");

                    b.Property<string>("CittàDomicilio")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CittàResidenza")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Codfisc")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)")
                        .HasColumnName("codfisc");

                    b.Property<string>("Cognome")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DataInizio")
                        .HasColumnType("datetime");

                    b.Property<string>("DataLettera")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DatadiNascita")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("DescrizioneProfessione")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("email");

                    b.Property<bool?>("EsenteFondoComune")
                        .HasColumnType("bit");

                    b.Property<double?>("FondoCarità")
                        .HasColumnType("float");

                    b.Property<string>("Gruppo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IndirizzoDomicilio")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IndirizzoResidenza")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LuogoDiLavoro")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LuogodiNascita")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nazione")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("nazione");

                    b.Property<string>("NazioneDomicilio")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NazioneResidenza")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nome")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short?>("NumeroIscrizione")
                        .HasColumnType("smallint");

                    b.Property<string>("NumeroIscrizioneFraternità")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("PartecipaRitiro")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("PartecipaRitiroData")
                        .HasColumnType("datetime");

                    b.Property<string>("Professione")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Provincia")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("provincia");

                    b.Property<string>("ProvinciaDomicilio")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ProvinciaResidenza")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double?>("QuotaFondoCarita")
                        .HasColumnType("float");

                    b.Property<double?>("QuotaFondoComune")
                        .HasColumnType("float");

                    b.Property<bool?>("Responsabile")
                        .HasColumnType("bit");

                    b.Property<double?>("RitiroImporto")
                        .HasColumnType("float");

                    b.Property<string>("RitiroPagamentoCro")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("RitiroPagamentoCRO");

                    b.Property<DateTime?>("RitiroPagamentoData")
                        .HasColumnType("datetime");

                    b.Property<string>("RitiroPagamentoIdtransazione")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("RitiroPagamentoIDTransazione");

                    b.Property<double?>("RitiroPagamentoImporto")
                        .HasColumnType("float");

                    b.Property<double?>("RitiroQuota")
                        .HasColumnType("float");

                    b.Property<double?>("RitiroSupplentoSingola")
                        .HasColumnType("float");

                    b.Property<bool>("SanGiuseppe")
                        .HasColumnType("bit");

                    b.Property<string>("Sesso")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("Telefono1")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("telefono1");

                    b.Property<string>("Telefono2")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("telefono2");

                    b.Property<string>("TipoPagamento")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("UID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(NewID())");

                    b.Property<string>("Zona")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Idanagrafica");

                    b.ToTable("AnagraficaSospesi");
                });

            modelBuilder.Entity("SanGiuseppe.Models.AnagraficaStorico", b =>
                {
                    b.Property<int>("Idanagrafica")
                        .HasColumnType("int")
                        .HasColumnName("IDAnagrafica");

                    b.Property<int?>("Albergo")
                        .HasColumnType("int");

                    b.Property<int?>("AnnoDiInizio")
                        .HasColumnType("int");

                    b.Property<string>("Camera")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("CameraSingola")
                        .HasColumnType("bit");

                    b.Property<string>("CapDomicilio")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CapResidenza")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Cellulare")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("cellulare");

                    b.Property<string>("Cittadinanza")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("cittadinanza");

                    b.Property<string>("CittàDomicilio")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CittàResidenza")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Codfisc")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)")
                        .HasColumnName("codfisc");

                    b.Property<string>("Cognome")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DataInizio")
                        .HasColumnType("datetime");

                    b.Property<string>("DataLettera")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("DatadiNascita")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("DescrizioneProfessione")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("email");

                    b.Property<bool?>("EsenteFondoComune")
                        .HasColumnType("bit");

                    b.Property<double?>("FondoCarità")
                        .HasColumnType("float");

                    b.Property<string>("Gruppo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IndirizzoDomicilio")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IndirizzoResidenza")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LuogoDiLavoro")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LuogodiNascita")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nazione")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("nazione");

                    b.Property<string>("NazioneDomicilio")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NazioneResidenza")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nome")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short?>("NumeroIscrizione")
                        .HasColumnType("smallint");

                    b.Property<string>("NumeroIscrizioneFraternità")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("PartecipaRitiro")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("PartecipaRitiroData")
                        .HasColumnType("datetime");

                    b.Property<string>("Professione")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Provincia")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("provincia");

                    b.Property<string>("ProvinciaDomicilio")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ProvinciaResidenza")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double?>("QuotaFondoCarita")
                        .HasColumnType("float");

                    b.Property<double?>("QuotaFondoComune")
                        .HasColumnType("float");

                    b.Property<bool?>("Responsabile")
                        .HasColumnType("bit");

                    b.Property<double?>("RitiroImporto")
                        .HasColumnType("float");

                    b.Property<string>("RitiroPagamentoCro")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("RitiroPagamentoCRO");

                    b.Property<DateTime?>("RitiroPagamentoData")
                        .HasColumnType("datetime");

                    b.Property<string>("RitiroPagamentoIdtransazione")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("RitiroPagamentoIDTransazione");

                    b.Property<double?>("RitiroPagamentoImporto")
                        .HasColumnType("float");

                    b.Property<double?>("RitiroQuota")
                        .HasColumnType("float");

                    b.Property<double?>("RitiroSupplentoSingola")
                        .HasColumnType("float");

                    b.Property<bool>("SanGiuseppe")
                        .HasColumnType("bit");

                    b.Property<string>("Sesso")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("Telefono1")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("telefono1");

                    b.Property<string>("Telefono2")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("telefono2");

                    b.Property<string>("TipoPagamento")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("UID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(NewID())");

                    b.Property<string>("Zona")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Idanagrafica");

                    b.ToTable("AnagraficaStorico");
                });

            modelBuilder.Entity("SanGiuseppe.Models.Avvisi", b =>
                {
                    b.Property<int>("Idavviso")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IDAvviso")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Anno")
                        .HasColumnType("int");

                    b.Property<string>("Categoria")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Colore")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contenuto")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime");

                    b.Property<int?>("Homepage")
                        .HasColumnType("int");

                    b.Property<string>("Link")
                        .HasColumnType("ntext");

                    b.Property<int?>("Ordinamento")
                        .HasColumnType("int");

                    b.Property<string>("Titolo")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<Guid>("UID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(NewID())");

                    b.Property<int?>("Visibile")
                        .HasColumnType("int");

                    b.Property<string>("Zona")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Idavviso");

                    b.ToTable("Avvisi");
                });

            modelBuilder.Entity("SanGiuseppe.Models.AvvisiPermessi", b =>
                {
                    b.Property<int>("IdAvvisPermesso")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AvvisiIdavviso")
                        .HasColumnType("int");

                    b.Property<int>("Idavviso")
                        .HasColumnType("int");

                    b.Property<string>("Permesso")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdAvvisPermesso");

                    b.HasIndex("AvvisiIdavviso");

                    b.ToTable("AvvisiPermessi");
                });

            modelBuilder.Entity("SanGiuseppe.Models.CapiGruppetto", b =>
                {
                    b.Property<int>("IdcapoGruppetto")
                        .HasColumnType("int")
                        .HasColumnName("IDCapoGruppetto");

                    b.Property<DateTime?>("DataInizio")
                        .HasColumnType("date");

                    b.Property<int?>("Idanagrafica")
                        .HasColumnType("int")
                        .HasColumnName("IDAnagrafica");

                    b.Property<int?>("Idgruppetto")
                        .HasColumnType("int")
                        .HasColumnName("IDGruppetto");

                    b.Property<DateTime?>("Scadenza")
                        .HasColumnType("date");

                    b.HasKey("IdcapoGruppetto");

                    b.HasIndex("Idanagrafica");

                    b.ToTable("CapiGruppetto");
                });

            modelBuilder.Entity("SanGiuseppe.Models.Dizionario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Chiave")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lingua")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Traduzione")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Dizionario");
                });

            modelBuilder.Entity("SanGiuseppe.Models.FondoComune", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Anno")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataPagamento01")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataPagamento02")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataPagamento03")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataPagamento04")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataPagamento05")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataPagamento06")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataPagamento07")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataPagamento08")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataPagamento09")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataPagamento10")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataPagamento11")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataPagamento12")
                        .HasColumnType("datetime");

                    b.Property<int?>("Idanagrafica")
                        .HasColumnType("int")
                        .HasColumnName("IDAnagrafica");

                    b.Property<double?>("Importo01")
                        .HasColumnType("float");

                    b.Property<double?>("Importo02")
                        .HasColumnType("float");

                    b.Property<double?>("Importo03")
                        .HasColumnType("float");

                    b.Property<double?>("Importo04")
                        .HasColumnType("float");

                    b.Property<double?>("Importo05")
                        .HasColumnType("float");

                    b.Property<double?>("Importo06")
                        .HasColumnType("float");

                    b.Property<double?>("Importo07")
                        .HasColumnType("float");

                    b.Property<double?>("Importo08")
                        .HasColumnType("float");

                    b.Property<double?>("Importo09")
                        .HasColumnType("float");

                    b.Property<double?>("Importo10")
                        .HasColumnType("float");

                    b.Property<double?>("Importo11")
                        .HasColumnType("float");

                    b.Property<double?>("Importo12")
                        .HasColumnType("float");

                    b.Property<string>("Note")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<double?>("Quota01")
                        .HasColumnType("float");

                    b.Property<double?>("Quota02")
                        .HasColumnType("float");

                    b.Property<double?>("Quota03")
                        .HasColumnType("float");

                    b.Property<double?>("Quota04")
                        .HasColumnType("float");

                    b.Property<double?>("Quota05")
                        .HasColumnType("float");

                    b.Property<double?>("Quota06")
                        .HasColumnType("float");

                    b.Property<double?>("Quota07")
                        .HasColumnType("float");

                    b.Property<double?>("Quota08")
                        .HasColumnType("float");

                    b.Property<double?>("Quota09")
                        .HasColumnType("float");

                    b.Property<double?>("Quota10")
                        .HasColumnType("float");

                    b.Property<double?>("Quota11")
                        .HasColumnType("float");

                    b.Property<double?>("Quota12")
                        .HasColumnType("float");

                    b.Property<string>("TipoPagamento01")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("TipoPagamento02")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("TipoPagamento03")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("TipoPagamento04")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("TipoPagamento05")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("TipoPagamento06")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("TipoPagamento07")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("TipoPagamento08")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("TipoPagamento09")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("TipoPagamento10")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("TipoPagamento11")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("TipoPagamento12")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<Guid>("UID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(NewID())");

                    b.Property<string>("Valuta01")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("Valuta02")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("Valuta03")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("Valuta04")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("Valuta05")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("Valuta06")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("Valuta07")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("Valuta08")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("Valuta09")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("Valuta10")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("Valuta11")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("Valuta12")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.HasKey("Id");

                    b.HasIndex("Idanagrafica");

                    b.ToTable("FondoComune");
                });

            modelBuilder.Entity("SanGiuseppe.Models.FondoComuneSospesi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Anno")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataPagamento01")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataPagamento02")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataPagamento03")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataPagamento04")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataPagamento05")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataPagamento06")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataPagamento07")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataPagamento08")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataPagamento09")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataPagamento10")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataPagamento11")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataPagamento12")
                        .HasColumnType("datetime");

                    b.Property<int>("Idanagrafica")
                        .HasColumnType("int")
                        .HasColumnName("IDAnagrafica");

                    b.Property<double?>("Importo01")
                        .HasColumnType("float");

                    b.Property<double?>("Importo02")
                        .HasColumnType("float");

                    b.Property<double?>("Importo03")
                        .HasColumnType("float");

                    b.Property<double?>("Importo04")
                        .HasColumnType("float");

                    b.Property<double?>("Importo05")
                        .HasColumnType("float");

                    b.Property<double?>("Importo06")
                        .HasColumnType("float");

                    b.Property<double?>("Importo07")
                        .HasColumnType("float");

                    b.Property<double?>("Importo08")
                        .HasColumnType("float");

                    b.Property<double?>("Importo09")
                        .HasColumnType("float");

                    b.Property<double?>("Importo10")
                        .HasColumnType("float");

                    b.Property<double?>("Importo11")
                        .HasColumnType("float");

                    b.Property<double?>("Importo12")
                        .HasColumnType("float");

                    b.Property<string>("Note")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<double?>("Quota01")
                        .HasColumnType("float");

                    b.Property<double?>("Quota02")
                        .HasColumnType("float");

                    b.Property<double?>("Quota03")
                        .HasColumnType("float");

                    b.Property<double?>("Quota04")
                        .HasColumnType("float");

                    b.Property<double?>("Quota05")
                        .HasColumnType("float");

                    b.Property<double?>("Quota06")
                        .HasColumnType("float");

                    b.Property<double?>("Quota07")
                        .HasColumnType("float");

                    b.Property<double?>("Quota08")
                        .HasColumnType("float");

                    b.Property<double?>("Quota09")
                        .HasColumnType("float");

                    b.Property<double?>("Quota10")
                        .HasColumnType("float");

                    b.Property<double?>("Quota11")
                        .HasColumnType("float");

                    b.Property<double?>("Quota12")
                        .HasColumnType("float");

                    b.Property<string>("TipoPagamento01")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("TipoPagamento02")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("TipoPagamento03")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("TipoPagamento04")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("TipoPagamento05")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("TipoPagamento06")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("TipoPagamento07")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("TipoPagamento08")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("TipoPagamento09")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("TipoPagamento10")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("TipoPagamento11")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("TipoPagamento12")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<Guid>("UID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(NewID())");

                    b.Property<string>("Valuta01")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("Valuta02")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("Valuta03")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("Valuta04")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("Valuta05")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("Valuta06")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("Valuta07")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("Valuta08")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("Valuta09")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("Valuta10")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("Valuta11")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("Valuta12")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.HasKey("Id");

                    b.HasIndex("Idanagrafica");

                    b.ToTable("FondoComuneSospesi");
                });

            modelBuilder.Entity("SanGiuseppe.Models.FondoComuneStorico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Anno")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataPagamento01")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataPagamento02")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataPagamento03")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataPagamento04")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataPagamento05")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataPagamento06")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataPagamento07")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataPagamento08")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataPagamento09")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataPagamento10")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataPagamento11")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataPagamento12")
                        .HasColumnType("datetime");

                    b.Property<int>("Idanagrafica")
                        .HasColumnType("int")
                        .HasColumnName("IDAnagrafica");

                    b.Property<double?>("Importo01")
                        .HasColumnType("float");

                    b.Property<double?>("Importo02")
                        .HasColumnType("float");

                    b.Property<double?>("Importo03")
                        .HasColumnType("float");

                    b.Property<double?>("Importo04")
                        .HasColumnType("float");

                    b.Property<double?>("Importo05")
                        .HasColumnType("float");

                    b.Property<double?>("Importo06")
                        .HasColumnType("float");

                    b.Property<double?>("Importo07")
                        .HasColumnType("float");

                    b.Property<double?>("Importo08")
                        .HasColumnType("float");

                    b.Property<double?>("Importo09")
                        .HasColumnType("float");

                    b.Property<double?>("Importo10")
                        .HasColumnType("float");

                    b.Property<double?>("Importo11")
                        .HasColumnType("float");

                    b.Property<double?>("Importo12")
                        .HasColumnType("float");

                    b.Property<string>("Note")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<double?>("Quota01")
                        .HasColumnType("float");

                    b.Property<double?>("Quota02")
                        .HasColumnType("float");

                    b.Property<double?>("Quota03")
                        .HasColumnType("float");

                    b.Property<double?>("Quota04")
                        .HasColumnType("float");

                    b.Property<double?>("Quota05")
                        .HasColumnType("float");

                    b.Property<double?>("Quota06")
                        .HasColumnType("float");

                    b.Property<double?>("Quota07")
                        .HasColumnType("float");

                    b.Property<double?>("Quota08")
                        .HasColumnType("float");

                    b.Property<double?>("Quota09")
                        .HasColumnType("float");

                    b.Property<double?>("Quota10")
                        .HasColumnType("float");

                    b.Property<double?>("Quota11")
                        .HasColumnType("float");

                    b.Property<double?>("Quota12")
                        .HasColumnType("float");

                    b.Property<string>("TipoPagamento01")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("TipoPagamento02")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("TipoPagamento03")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("TipoPagamento04")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("TipoPagamento05")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("TipoPagamento06")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("TipoPagamento07")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("TipoPagamento08")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("TipoPagamento09")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("TipoPagamento10")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("TipoPagamento11")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("TipoPagamento12")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<Guid>("UID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(NewID())");

                    b.Property<string>("Valuta01")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("Valuta02")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("Valuta03")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("Valuta04")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("Valuta05")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("Valuta06")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("Valuta07")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("Valuta08")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("Valuta09")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("Valuta10")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("Valuta11")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("Valuta12")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.HasKey("Id");

                    b.HasIndex("Idanagrafica");

                    b.ToTable("FondoComuneStorico");
                });

            modelBuilder.Entity("SanGiuseppe.Models.Help", b =>
                {
                    b.Property<string>("NomeCampo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NomePagina")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TestoAiuto")
                        .HasColumnType("ntext");

                    b.ToTable("Help");
                });

            modelBuilder.Entity("SanGiuseppe.Models.Menu", b =>
                {
                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("Gruppo")
                        .HasColumnType("int");

                    b.Property<string>("GruppoAccesso")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<string>("Link")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("Ordinamento")
                        .HasColumnType("int");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int")
                        .HasColumnName("ParentID");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("Visibile")
                        .HasColumnType("int");

                    b.ToTable("Menu");
                });

            modelBuilder.Entity("SanGiuseppe.Models.RegistroAccessi", b =>
                {
                    b.Property<DateTime?>("Data")
                        .HasColumnType("datetime");

                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<string>("Ip")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("IP");

                    b.Property<string>("Note")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Pagina")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Username")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.ToTable("RegistroAccessi");
                });

            modelBuilder.Entity("SanGiuseppe.Models.SpedizioneEmailSito", b =>
                {
                    b.Property<int?>("Albergo")
                        .HasColumnType("int");

                    b.Property<string>("Camera")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("CameraSingola")
                        .HasColumnType("bit");

                    b.Property<string>("CapDomicilio")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CapResidenza")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Cellulare")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("cellulare");

                    b.Property<string>("Cittadinanza")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("cittadinanza");

                    b.Property<string>("CittàDomicilio")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("CittàResidenza")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Codfisc")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)")
                        .HasColumnName("codfisc");

                    b.Property<string>("Cognome")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("DataInizio")
                        .HasColumnType("datetime");

                    b.Property<string>("DatadiNascita")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("DescrizioneProfessione")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("email");

                    b.Property<bool>("Expr1")
                        .HasColumnType("bit");

                    b.Property<string>("Expr2")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double?>("FondoCarità")
                        .HasColumnType("float");

                    b.Property<string>("Gruppo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Idsocio")
                        .HasColumnType("int")
                        .HasColumnName("IDSocio");

                    b.Property<string>("IndirizzoDomicilio")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("IndirizzoResidenza")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LuogoDiLavoro")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LuogodiNascita")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nazione")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("nazione");

                    b.Property<string>("NazioneDomicilio")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NazioneResidenza")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nome")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short?>("NumeroIscrizione")
                        .HasColumnType("smallint");

                    b.Property<string>("NumeroIscrizioneFraternità")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool?>("PartecipaRitiro")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("PartecipaRitiroData")
                        .HasColumnType("datetime");

                    b.Property<string>("Password")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Professione")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Provincia")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("provincia");

                    b.Property<string>("ProvinciaDomicilio")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ProvinciaResidenza")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double?>("QuotaFondoCarita")
                        .HasColumnType("float");

                    b.Property<double?>("QuotaFondoComune")
                        .HasColumnType("float");

                    b.Property<bool?>("Responsabile")
                        .HasColumnType("bit");

                    b.Property<double?>("RitiroImporto")
                        .HasColumnType("float");

                    b.Property<string>("RitiroPagamentoCro")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("RitiroPagamentoCRO");

                    b.Property<DateTime?>("RitiroPagamentoData")
                        .HasColumnType("datetime");

                    b.Property<string>("RitiroPagamentoIdtransazione")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("RitiroPagamentoIDTransazione");

                    b.Property<double?>("RitiroPagamentoImporto")
                        .HasColumnType("float");

                    b.Property<double?>("RitiroQuota")
                        .HasColumnType("float");

                    b.Property<double?>("RitiroSupplentoSingola")
                        .HasColumnType("float");

                    b.Property<bool>("SanGiuseppe")
                        .HasColumnType("bit");

                    b.Property<string>("Sesso")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("Telefono1")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("telefono1");

                    b.Property<string>("Telefono2")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("telefono2");

                    b.Property<string>("TipoPagamento")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Username")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Zona")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.ToTable("SpedizioneEmailSito");
                });

            modelBuilder.Entity("SanGiuseppe.Models.TabellaCitta", b =>
                {
                    b.Property<string>("Cap")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<bool>("Cappario")
                        .HasColumnType("bit");

                    b.Property<string>("Citta")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Idcitta")
                        .HasColumnType("int")
                        .HasColumnName("IDCitta");

                    b.Property<string>("Nazione")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("PrefissoTelefonico")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Provincia")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("Regione")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.ToTable("TabellaCitta");
                });

            modelBuilder.Entity("SanGiuseppe.Models.TabellaCodiciRuolo", b =>
                {
                    b.Property<string>("CodiceRuolo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Descrizione")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("CodiceRuolo")
                        .HasName("PK_TabellaCodiciIncarico");

                    b.ToTable("TabellaCodiciRuolo");
                });

            modelBuilder.Entity("SanGiuseppe.Models.TabellaGruppetti", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Gruppetto")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength(true);

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Gruppetto" }, "IX_Table_Gruppetto");

                    b.ToTable("TabellaGruppetti");
                });

            modelBuilder.Entity("SanGiuseppe.Models.TabellaGruppi", b =>
                {
                    b.Property<string>("Gruppo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("gruppo");

                    b.ToTable("TabellaGruppi");
                });

            modelBuilder.Entity("SanGiuseppe.Models.TabellaGruppiAccesso", b =>
                {
                    b.Property<string>("Descrizione")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("Gruppo")
                        .HasColumnType("int");

                    b.Property<bool?>("IsAdmin")
                        .HasColumnType("bit");

                    b.ToTable("TabellaGruppiAccesso");
                });

            modelBuilder.Entity("SanGiuseppe.Models.TabellaLingue", b =>
                {
                    b.Property<string>("Lingua")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Lingua");

                    b.ToTable("TabellaLingue");
                });

            modelBuilder.Entity("SanGiuseppe.Models.TabellaNazioni", b =>
                {
                    b.Property<string>("SiglaNazione")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("CodiceValuta")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Nazione")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("NazioneEsp")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("NazioneESP");

                    b.Property<string>("NazionePor")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("NazionePOR");

                    b.Property<string>("NazioneUk")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("NazioneUK");

                    b.Property<string>("PrefissoInternazionale")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("SiglaNazione");

                    b.ToTable("TabellaNazioni");
                });

            modelBuilder.Entity("SanGiuseppe.Models.TabellaParametri", b =>
                {
                    b.Property<string>("Contenuto")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ContenutoHtml")
                        .HasColumnType("ntext")
                        .HasColumnName("ContenutoHTML");

                    b.Property<string>("NomeParametro")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nchar(50)")
                        .IsFixedLength(true);

                    b.ToTable("TabellaParametri");
                });

            modelBuilder.Entity("SanGiuseppe.Models.TabellaProfessioni", b =>
                {
                    b.Property<string>("Professione")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.ToTable("TabellaProfessioni");
                });

            modelBuilder.Entity("SanGiuseppe.Models.TabellaRegioni", b =>
                {
                    b.Property<string>("CodiceNazione")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)")
                        .HasColumnName("codice nazione");

                    b.Property<string>("CodiceRegione")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)")
                        .HasColumnName("codice regione");

                    b.Property<string>("CodiceRegionePastorale")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)")
                        .HasColumnName("codice regione pastorale");

                    b.Property<string>("Regione")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("regione");

                    b.ToTable("TabellaRegioni");
                });

            modelBuilder.Entity("SanGiuseppe.Models.TabellaValute", b =>
                {
                    b.Property<string>("CodiceValuta")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nchar(3)")
                        .IsFixedLength(true);

                    b.Property<string>("DescrizioneValuta")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.ToTable("TabellaValute");
                });

            modelBuilder.Entity("SanGiuseppe.Models.TabellaZone", b =>
                {
                    b.Property<string>("Zona")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.ToTable("TabellaZone");
                });

            modelBuilder.Entity("SanGiuseppe.Models.Traduzioni", b =>
                {
                    b.Property<string>("Chiave")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    b.Property<string>("Lingua")
                        .HasMaxLength(3)
                        .HasColumnType("nchar(3)")
                        .IsFixedLength(true);

                    b.Property<string>("Pagina")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Traduzione")
                        .HasMaxLength(4000)
                        .HasColumnType("nvarchar(4000)");

                    b.ToTable("Traduzioni");
                });

            modelBuilder.Entity("SanGiuseppe.Models.Utenti", b =>
                {
                    b.Property<int>("Idutente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IDUtente")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Comunità")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataultimaModificaPassword")
                        .HasColumnType("date");

                    b.Property<string>("Gruppo")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<int>("Idanagrafica")
                        .HasColumnType("int")
                        .HasColumnName("IDAnagrafica");

                    b.Property<string>("Password")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("UID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(NewID())");

                    b.Property<string>("Username")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("VecchiaUsername")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Idutente");

                    b.HasIndex("Idanagrafica");

                    b.HasIndex(new[] { "Idutente" }, "IX_Utenti_IDAnagrafica")
                        .IsUnique()
                        .HasDatabaseName("IX_Utenti_IDAnagrafica1");

                    b.ToTable("Utenti");
                });

            modelBuilder.Entity("SanGiuseppe.Models.UtentiPermessi", b =>
                {
                    b.Property<int>("IdUtentePermesso")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Idutente")
                        .HasColumnType("int");

                    b.Property<string>("Permesso")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UtentiIdutente")
                        .HasColumnType("int");

                    b.HasKey("IdUtentePermesso");

                    b.HasIndex("UtentiIdutente");

                    b.ToTable("UtentiPermessi");
                });

            modelBuilder.Entity("SanGiuseppe.Models.Visitor", b =>
                {
                    b.Property<int>("Idvisitor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IDVisitor");

                    b.Property<DateTime?>("DataInizio")
                        .HasColumnType("date");

                    b.Property<int?>("Idanagrafica")
                        .HasColumnType("int")
                        .HasColumnName("IDAnagrafica");

                    b.Property<int>("Idgruppetto")
                        .HasColumnType("int")
                        .HasColumnName("IDGruppetto");

                    b.Property<DateTime?>("Scadenza")
                        .HasColumnType("date");

                    b.Property<string>("SiglaNazione")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.HasKey("Idvisitor");

                    b.HasIndex("Idgruppetto");

                    b.HasIndex("SiglaNazione");

                    b.ToTable("Visitor");
                });

            modelBuilder.Entity("SanGiuseppe.Models.AnagraficaRuoli", b =>
                {
                    b.HasOne("SanGiuseppe.Models.Anagrafica", "IdanagraficaNavigation")
                        .WithMany("AnagraficaRuoli")
                        .HasForeignKey("Idanagrafica")
                        .HasConstraintName("FK_AnagraficaRuoli_Anagrafica");

                    b.Navigation("IdanagraficaNavigation");
                });

            modelBuilder.Entity("SanGiuseppe.Models.AvvisiPermessi", b =>
                {
                    b.HasOne("SanGiuseppe.Models.Avvisi", "Avvisi")
                        .WithMany("AvvisiPermessi")
                        .HasForeignKey("AvvisiIdavviso")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Avvisi");
                });

            modelBuilder.Entity("SanGiuseppe.Models.CapiGruppetto", b =>
                {
                    b.HasOne("SanGiuseppe.Models.Anagrafica", "IdanagraficaNavigation")
                        .WithMany("CapiGruppetto")
                        .HasForeignKey("Idanagrafica")
                        .HasConstraintName("FK_CapiGruppetto_Anagrafica")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SanGiuseppe.Models.TabellaGruppetti", "IdcapoGruppettoNavigation")
                        .WithOne("CapiGruppetto")
                        .HasForeignKey("SanGiuseppe.Models.CapiGruppetto", "IdcapoGruppetto")
                        .HasConstraintName("FK_CapiGruppetto_Gruppetti")
                        .IsRequired();

                    b.Navigation("IdanagraficaNavigation");

                    b.Navigation("IdcapoGruppettoNavigation");
                });

            modelBuilder.Entity("SanGiuseppe.Models.FondoComune", b =>
                {
                    b.HasOne("SanGiuseppe.Models.Anagrafica", "IdanagraficaNavigation")
                        .WithMany("FondoComune")
                        .HasForeignKey("Idanagrafica")
                        .HasConstraintName("FK_FondoComune_FondoComune")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("IdanagraficaNavigation");
                });

            modelBuilder.Entity("SanGiuseppe.Models.FondoComuneSospesi", b =>
                {
                    b.HasOne("SanGiuseppe.Models.AnagraficaSospesi", "IdanagraficaNavigation")
                        .WithMany("FondoComuneSospesi")
                        .HasForeignKey("Idanagrafica")
                        .HasConstraintName("FK_FondoComuneSospesi_AnagraficaSospesi")
                        .IsRequired();

                    b.Navigation("IdanagraficaNavigation");
                });

            modelBuilder.Entity("SanGiuseppe.Models.FondoComuneStorico", b =>
                {
                    b.HasOne("SanGiuseppe.Models.AnagraficaStorico", "IdanagraficaNavigation")
                        .WithMany("FondoComuneStorico")
                        .HasForeignKey("Idanagrafica")
                        .HasConstraintName("FK_FondoComuneStorico_AnagraficaStorico")
                        .IsRequired();

                    b.Navigation("IdanagraficaNavigation");
                });

            modelBuilder.Entity("SanGiuseppe.Models.Utenti", b =>
                {
                    b.HasOne("SanGiuseppe.Models.Anagrafica", "IdanagraficaNavigation")
                        .WithMany("Utenti")
                        .HasForeignKey("Idanagrafica")
                        .HasConstraintName("FK_Utenti_Anagrafica")
                        .IsRequired();

                    b.Navigation("IdanagraficaNavigation");
                });

            modelBuilder.Entity("SanGiuseppe.Models.UtentiPermessi", b =>
                {
                    b.HasOne("SanGiuseppe.Models.Utenti", "Utenti")
                        .WithMany("UtentiPermessi")
                        .HasForeignKey("UtentiIdutente")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Utenti");
                });

            modelBuilder.Entity("SanGiuseppe.Models.Visitor", b =>
                {
                    b.HasOne("SanGiuseppe.Models.TabellaGruppetti", "IdgruppettoNavigation")
                        .WithMany("Visitor")
                        .HasForeignKey("Idgruppetto")
                        .HasConstraintName("FK_Visitor_Gruppetti")
                        .IsRequired();

                    b.HasOne("SanGiuseppe.Models.Anagrafica", "IdvisitorNavigation")
                        .WithOne("Visitor")
                        .HasForeignKey("SanGiuseppe.Models.Visitor", "Idvisitor")
                        .HasConstraintName("FK_Visitor_Anagrafica")
                        .IsRequired();

                    b.HasOne("SanGiuseppe.Models.TabellaNazioni", "SiglaNazioneNavigation")
                        .WithMany("Visitor")
                        .HasForeignKey("SiglaNazione")
                        .HasConstraintName("FK_Visitor_Nazioni");

                    b.Navigation("IdgruppettoNavigation");

                    b.Navigation("IdvisitorNavigation");

                    b.Navigation("SiglaNazioneNavigation");
                });

            modelBuilder.Entity("SanGiuseppe.Models.Anagrafica", b =>
                {
                    b.Navigation("AnagraficaRuoli");

                    b.Navigation("CapiGruppetto");

                    b.Navigation("FondoComune");

                    b.Navigation("Utenti");

                    b.Navigation("Visitor");
                });

            modelBuilder.Entity("SanGiuseppe.Models.AnagraficaSospesi", b =>
                {
                    b.Navigation("FondoComuneSospesi");
                });

            modelBuilder.Entity("SanGiuseppe.Models.AnagraficaStorico", b =>
                {
                    b.Navigation("FondoComuneStorico");
                });

            modelBuilder.Entity("SanGiuseppe.Models.Avvisi", b =>
                {
                    b.Navigation("AvvisiPermessi");
                });

            modelBuilder.Entity("SanGiuseppe.Models.TabellaGruppetti", b =>
                {
                    b.Navigation("CapiGruppetto");

                    b.Navigation("Visitor");
                });

            modelBuilder.Entity("SanGiuseppe.Models.TabellaNazioni", b =>
                {
                    b.Navigation("Visitor");
                });

            modelBuilder.Entity("SanGiuseppe.Models.Utenti", b =>
                {
                    b.Navigation("UtentiPermessi");
                });
#pragma warning restore 612, 618
        }
    }
}
